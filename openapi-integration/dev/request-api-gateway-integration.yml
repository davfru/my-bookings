components:
  securitySchemes:
    api_key:
      type: "apiKey"
      name: "x-api-key"
      in: "header"
    cognito_authorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs:
          - Fn::GetAtt: ["ClientUserPool", "Arn"]

paths:
  /bookings:
    post:
      security:
        - api_key: []
        - cognito_authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Join:
            - ""
            - - "arn:aws:apigateway:"
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt: ["BookingApiLambdaFunction", "Arn"]
              - '/invocations'
        type: "aws_proxy"
        passthroughBehavior: "when_no_match"

  /bookings/{id}:
    get:
      security:
        - api_key: []
        - cognito_authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Join:
            - ""
            - - "arn:aws:apigateway:"
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt: ["BookingApiLambdaFunction", "Arn"]
              - '/invocations'
        type: "aws_proxy"
        passthroughBehavior: "when_no_match"

